"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/technology/page",{

/***/ "(app-pages-browser)/./src/app/technology/content.ts":
/*!***************************************!*\
  !*** ./src/app/technology/content.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   content: () => (/* binding */ content)\n/* harmony export */ });\nconst content = {\n    hero: {\n        headline: \"Unbreakable FPGA-Based Data Diode Technology\",\n        subheading: \"Secure, Tamper-Proof, and 100% Unidirectional Data Flow.\"\n    },\n    technology: {\n        title: \"Technology Overview\",\n        description: \"Our FPGA-based data diode technology provides unparalleled security through hardware-enforced unidirectional data flow.\",\n        subtitle: \"Why FPGA-Based Solutions Are Superior\",\n        content: \"Unlike software-based security solutions that can be compromised through vulnerabilities or misconfigurations, our FPGA (Field-Programmable Gate Array) technology enforces security at the hardware level.\",\n        points: [\n            {\n                title: \"Hardware-Enforced Security\",\n                description: \"Security is physically enforced by the hardware architecture, making it impossible to bypass through software exploits or configuration errors.\"\n            },\n            {\n                title: \"Tamper-Proof Design\",\n                description: \"The physical architecture cannot be tampered with or falsely set up without detection, ensuring data integrity at all times.\"\n            },\n            {\n                title: \"No IP Stack Vulnerabilities\",\n                description: \"By eliminating the traditional IP stack, we remove the attack surface that hackers typically exploit, creating a truly unhackable solution.\"\n            }\n        ]\n    },\n    features: {\n        title: \"Key Features & Benefits\",\n        description: \"Our FPGA-based data diode technology offers unmatched security features and benefits for critical infrastructure protection.\",\n        items: [\n            {\n                title: \"100% Unidirectional Data Transfer\",\n                description: \"Physically enforced one-way data flow ensures information can only travel in the intended direction, preventing data leakage and unauthorized access.\"\n            },\n            {\n                title: \"No IP Stack, Making It Unhackable\",\n                description: \"By eliminating the traditional IP stack, we remove the common attack vectors that hackers exploit, making the system inherently secure.\"\n            },\n            {\n                title: \"Low Latency, High Throughput\",\n                description: \"Our hardware-based solution provides exceptional performance with minimal latency and high data throughput for demanding applications.\"\n            },\n            {\n                title: \"Hardware-Enforced Security\",\n                description: \"Security is physically enforced by the FPGA hardware architecture, making it impossible to bypass through software exploits.\"\n            },\n            {\n                title: \"Compliant with Standards\",\n                description: \"Meets the strictest government and industry security standards for critical infrastructure protection and sensitive data handling.\"\n            },\n            {\n                title: \"Flexible Integration\",\n                description: \"Easily integrates with existing infrastructure and supports various protocols and data formats for seamless deployment.\"\n            }\n        ]\n    },\n    comparison: {\n        title: \"Product Comparison\",\n        description: \"See how Terafence's FPGA-based data diode technology compares to other solutions in the market.\",\n        columns: [\n            \"Data Flow Control\",\n            \"Security Layers\",\n            \"Tamper Resistance\",\n            \"Speed & Performance\",\n            \"Regulatory Compliance\",\n            \"Ease of Deployment\"\n        ],\n        data: [\n            {\n                company: \"Terafence\",\n                dataFlow: \"FPGA-based (Hardware)\",\n                securityLayers: \"Multiple\",\n                tamperResistance: \"Very High\",\n                performance: \"High Throughput, Low Latency\",\n                compliance: \"Government & Industry Standards\",\n                deployment: \"Simple\"\n            },\n            {\n                company: \"Owl Cyberdefense\",\n                dataFlow: \"Hardware-based\",\n                securityLayers: \"Multiple\",\n                tamperResistance: \"High\",\n                performance: \"Medium-High Throughput\",\n                compliance: \"Government & Industry Standards\",\n                deployment: \"Moderate\"\n            },\n            {\n                company: \"Opswat\",\n                dataFlow: \"Software-based\",\n                securityLayers: \"Multiple\",\n                tamperResistance: \"Medium\",\n                performance: \"Medium Throughput\",\n                compliance: \"Industry Standards\",\n                deployment: \"Moderate\"\n            },\n            {\n                company: \"Fibersystem\",\n                dataFlow: \"Hardware-based\",\n                securityLayers: \"Multiple\",\n                tamperResistance: \"High\",\n                performance: \"Medium Throughput\",\n                compliance: \"Government & Industry Standards\",\n                deployment: \"Moderate\"\n            },\n            {\n                company: \"Checkpoint\",\n                dataFlow: \"Software-based\",\n                securityLayers: \"Multiple\",\n                tamperResistance: \"Medium\",\n                performance: \"Medium Throughput\",\n                compliance: \"Industry Standards\",\n                deployment: \"Complex\"\n            },\n            {\n                company: \"Fortinet\",\n                dataFlow: \"Software-based\",\n                securityLayers: \"Multiple\",\n                tamperResistance: \"Medium\",\n                performance: \"Medium Throughput\",\n                compliance: \"Industry Standards\",\n                deployment: \"Complex\"\n            }\n        ],\n        features: [\n            {\n                title: \"Hardware vs. Software Solutions\",\n                description: \"FPGA-based hardware solutions like Terafence provide physical security guarantees that software-based solutions cannot match.\",\n                points: [\n                    \"Physical enforcement of unidirectional data flow\",\n                    \"Immune to software vulnerabilities and exploits\",\n                    \"Cannot be bypassed through configuration errors\"\n                ]\n            },\n            {\n                title: \"Performance Considerations\",\n                description: \"Terafence's FPGA technology delivers superior performance metrics compared to competitors.\",\n                points: [\n                    \"Lower latency for time-sensitive applications\",\n                    \"Higher throughput for data-intensive operations\",\n                    \"More consistent performance under load\"\n                ]\n            },\n            {\n                title: \"Compliance & Certification\",\n                description: \"Terafence meets the most stringent regulatory requirements for critical infrastructure.\",\n                points: [\n                    \"Government security standards compliance\",\n                    \"Industry-specific certifications\",\n                    \"Regular security assessments and validations\"\n                ]\n            },\n            {\n                title: \"Deployment & Integration\",\n                description: \"Terafence offers simpler deployment compared to many competitors.\",\n                points: [\n                    \"Faster implementation timeframes\",\n                    \"Reduced configuration complexity\",\n                    \"Broader compatibility with existing systems\"\n                ]\n            }\n        ]\n    },\n    cta: {\n        title: \"Ready to Secure Your Critical Infrastructure?\",\n        description: \"Discover how Terafence's FPGA-based data diode technology can provide unbreakable security for your organization.\",\n        cards: [\n            {\n                title: \"Schedule a Demo\",\n                description: \"See our FPGA-based data diode technology in action with a personalized demonstration.\",\n                buttonText: \"Request Demo\"\n            },\n            {\n                title: \"Speak to an Expert\",\n                description: \"Connect with our security specialists to discuss your specific requirements and challenges.\",\n                buttonText: \"Contact Us\"\n            }\n        ]\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/technology/content.ts\n"));

/***/ })

});